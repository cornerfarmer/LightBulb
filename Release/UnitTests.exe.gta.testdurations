<?xml version="1.0" encoding="utf-8"?>
<GtaTestDurations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Executable>C:\Users\Dominik\Documents\Visual Studio 2015\Projects\LightBulb\Release\UnitTests.exe</Executable>
  <TestDurations>
    <TestDuration Test="AbstractCoevolutionWorldTest.doSimulationStep" Duration="1" />
    <TestDuration Test="AbstractEvolutionWorldTest.getHighscoreList" Duration="1" />
    <TestDuration Test="BackpropagationLearningRuleTest.doLearning" Duration="238" />
    <TestDuration Test="BackpropagationLearningRuleTest.doLearningWithMomentum" Duration="3" />
    <TestDuration Test="BackpropagationLearningRuleTest.doLearningWithResilientLearningRate" Duration="16" />
    <TestDuration Test="BestReuseSelectorTest.executeReuseSelection" Duration="1" />
    <TestDuration Test="BestSelectionCommandTest.executeReuseSelection" Duration="1" />
    <TestDuration Test="BipartiteEvolutionLearningRuleTest.start" Duration="1" />
    <TestDuration Test="BrainJSExporterTest.exportSimpleLayeredNetwork" Duration="1" />
    <TestDuration Test="ConstantCoevolutionFitnessFunctionTest.start" Duration="1" />
    <TestDuration Test="ConstantCreationCommandTest.executeReuseSelection" Duration="1" />
    <TestDuration Test="ConstantMutationCommandTest.executeWithMultipleUsedObject" Duration="1" />
    <TestDuration Test="ConstantMutationCommandTest.executeWithNoMultipleUsedObject" Duration="1" />
    <TestDuration Test="ConstantMutationCommandTest.executeWithTwoMultipleUsedObjectsAndANotUsedObject" Duration="1" />
    <TestDuration Test="ConstantMutationCommandTest.selectPercentage" Duration="1" />
    <TestDuration Test="ConstantMutationCommandTest.selectStaticCount" Duration="1" />
    <TestDuration Test="ConstantRecombinationCommandTest.executeWithNoMultipleUsedObjects" Duration="1" />
    <TestDuration Test="ConstantRecombinationCommandTest.executeWithOneMultipleUsedObject1" Duration="1" />
    <TestDuration Test="ConstantRecombinationCommandTest.executeWithOneMultipleUsedObject2" Duration="1" />
    <TestDuration Test="ConstantRecombinationCommandTest.executeWithTwoMultipleUsedObjects" Duration="1" />
    <TestDuration Test="ConstantRecombinationCommandTest.executeWithTwoMultipleUsedObjectsAndANotUsedObject" Duration="1" />
    <TestDuration Test="ConstantRecombinationCommandTest.selectPercentage" Duration="1" />
    <TestDuration Test="ConstantRecombinationCommandTest.selectStaticCount" Duration="1" />
    <TestDuration Test="ConstantReuseCommandTest.executeWithMultipleUsedObject" Duration="1" />
    <TestDuration Test="ConstantReuseCommandTest.executeWithNoMultipleUsedObject" Duration="1" />
    <TestDuration Test="ConstantReuseCommandTest.executeWithTwoMultipleUsedObjectsAndANotUsedObject" Duration="1" />
    <TestDuration Test="ConstantReuseCommandTest.selectPercentage" Duration="1" />
    <TestDuration Test="ConstantReuseCommandTest.selectStaticCount" Duration="1" />
    <TestDuration Test="EuclideanDistance.computeNetInputs" Duration="1" />
    <TestDuration Test="EvolutionLearningRuleTest.learn" Duration="1" />
    <TestDuration Test="EvolutionLearningRuleTest.setLogger" Duration="1" />
    <TestDuration Test="ExponentialFitnessFunctionTest.execute" Duration="1" />
    <TestDuration Test="FitnessSharingFitnessFunctionTest.execute" Duration="1" />
    <TestDuration Test="FullHallOfFameAlgorithmTest.execute" Duration="1" />
    <TestDuration Test="LayeredNetworkTest.addNeuron" Duration="1" />
    <TestDuration Test="LayeredNetworkTest.addNeuronWithShortcuts" Duration="1" />
    <TestDuration Test="LayeredNetworkTest.createNetworkWithShortcuts" Duration="1" />
    <TestDuration Test="LayeredNetworkTest.createSimpleNetwork" Duration="1" />
    <TestDuration Test="LayeredNetworkTest.existsAfferentWeight" Duration="1" />
    <TestDuration Test="LayeredNetworkTest.removeAfferentWeight" Duration="1" />
    <TestDuration Test="LayeredNetworkTest.removeNeuron" Duration="1" />
    <TestDuration Test="LayeredNetworkTest.removeNeuronWithShortcuts" Duration="1" />
    <TestDuration Test="LinearScalingFitnessFunctionTest.execute" Duration="1" />
    <TestDuration Test="LinearScalingFitnessFunctionTest.executeDynmaic" Duration="1" />
    <TestDuration Test="MagnitudeBasedPruningMutationAlgorithmTest.removeNeuronByWeightCount" Duration="1" />
    <TestDuration Test="MagnitudeBasedPruningMutationAlgorithmTest.removeNeuronByWeightSum" Duration="1" />
    <TestDuration Test="MagnitudeBasedPruningMutationAlgorithmTest.removeWeight" Duration="1" />
    <TestDuration Test="MutationAlgorithmTest.execute" Duration="1" />
    <TestDuration Test="NeuralNetworkTest.calculate" Duration="1" />
    <TestDuration Test="NeuralNetworkTest.calculateSimple" Duration="1" />
    <TestDuration Test="NeuralNetworkTest.calculateSimpleWithoutReset" Duration="1" />
    <TestDuration Test="NeuralNetworkTest.calculateWithOutputValues" Duration="1" />
    <TestDuration Test="NeuralNetworkTest.calculateWithStartTime" Duration="1" />
    <TestDuration Test="NeuralNetworkTest.calculateWithTimeStepCount" Duration="1" />
    <TestDuration Test="PerfectObjectFoundConditionTest.evaluateNegative" Duration="1" />
    <TestDuration Test="PerfectObjectFoundConditionTest.evaluatePositive" Duration="1" />
    <TestDuration Test="PerfectObjectFoundConditionTest.evaluateWithEmptyHighscore" Duration="1" />
    <TestDuration Test="PerfectObjectFoundConditionTest.evaluateWithReset" Duration="1" />
    <TestDuration Test="PositiveMakerFitnessFunctionTest.execute" Duration="1" />
    <TestDuration Test="RandomCombiningStrategyTest.executeEmptyWorld" Duration="1" />
    <TestDuration Test="RandomCombiningStrategyTest.executeSingleWorld" Duration="1" />
    <TestDuration Test="RandomCombiningStrategyTest.executeTwoWorlds" Duration="1" />
    <TestDuration Test="RandomHallOfFameAlgorithmTest.execute" Duration="1" />
    <TestDuration Test="RandomSelectorTest.executeMutationSelection" Duration="1" />
    <TestDuration Test="RandomSelectorTest.executeRecombinationSelection" Duration="1" />
    <TestDuration Test="RateDifferenceConditionTest.evaluatePositive" Duration="1" />
    <TestDuration Test="RateDifferenceConditionTest.evaluateReset" Duration="1" />
    <TestDuration Test="RateDifferenceConditionTest.evaluateResetWithLowerValue" Duration="1" />
    <TestDuration Test="RateDifferenceConditionTest.evaluateWithEmptyHighscore" Duration="1" />
    <TestDuration Test="RBFInterpolationLearningRuleTest.doLearning" Duration="21" />
    <TestDuration Test="RBFNetworkTest.createSimpleNetwork" Duration="1" />
    <TestDuration Test="RBFNetworkTest.setCenterOfRBFNeuron" Duration="1" />
    <TestDuration Test="RBFNetworkTest.setWidthOfRBFNeuron" Duration="1" />
    <TestDuration Test="RecombinationAlgorithmTest.executeWithAverage" Duration="1" />
    <TestDuration Test="RecombinationAlgorithmTest.executeWithAverageWithDifferentSizes" Duration="1" />
    <TestDuration Test="RecombinationAlgorithmTest.executeWithoutAverage" Duration="1" />
    <TestDuration Test="RecombinationAlgorithmTest.executeWithoutAverageWithDifferentSizes" Duration="1" />
    <TestDuration Test="RemainderStochasticSamplingSelectorTest.executeMutationSelectionWithoutReplacement" Duration="1" />
    <TestDuration Test="RemainderStochasticSamplingSelectorTest.executeMutationSelectionWithReplacement" Duration="1" />
    <TestDuration Test="RoundRobinCombiningStrategyTest.executeEmptyWorld" Duration="1" />
    <TestDuration Test="RoundRobinCombiningStrategyTest.executeSingleWorld" Duration="1" />
    <TestDuration Test="RoundRobinCombiningStrategyTest.executeTwoWorlds" Duration="1" />
    <TestDuration Test="ScoreConditionTest.evaluateNegative" Duration="1" />
    <TestDuration Test="ScoreConditionTest.evaluatePositive" Duration="1" />
    <TestDuration Test="ScoreConditionTest.evaluateWithEmptyHighscore" Duration="1" />
    <TestDuration Test="SharedCoevolutionFitnessFunctionTest.start" Duration="1" />
    <TestDuration Test="SharedSamplingCombiningStrategyTest.executeEmptyParasiteWorld" Duration="1" />
    <TestDuration Test="SharedSamplingCombiningStrategyTest.executeSingleWorld" Duration="1" />
    <TestDuration Test="SharedSamplingCombiningStrategyTest.executeTwoEmptyWorlds" Duration="1" />
    <TestDuration Test="SharedSamplingCombiningStrategyTest.executeTwoWorlds" Duration="1" />
    <TestDuration Test="StandardDeviationFitnessFunctionTest.execute" Duration="1" />
    <TestDuration Test="StandardDeviationFitnessFunctionTest.executeFails" Duration="1" />
    <TestDuration Test="StochasticUniversalSamplingSelectorTest.executeMutationSelection" Duration="1" />
    <TestDuration Test="StochasticUniversalSamplingSelectorTest.executeRecombinationSelection" Duration="1" />
    <TestDuration Test="SynapticExporterTest.exportSimpleLayeredNetwork" Duration="1" />
    <TestDuration Test="TeachedEvolutionTest.doSimulationStep" Duration="1" />
    <TestDuration Test="TeacherTest.getMaxTimeStep" Duration="1" />
    <TestDuration Test="TeacherTest.getTeachingLessons" Duration="1" />
    <TestDuration Test="TeacherTest.getTestingLessons" Duration="1" />
    <TestDuration Test="TeacherTest.getTotalError" Duration="1" />
    <TestDuration Test="TeacherTest.unfold" Duration="1" />
    <TestDuration Test="TeachingLessonBooleanInputTest.getMaxTimeStep" Duration="1" />
    <TestDuration Test="TeachingLessonBooleanInputTest.getTeachingInput" Duration="1" />
    <TestDuration Test="TeachingLessonBooleanInputTest.getTeachingPattern" Duration="1" />
    <TestDuration Test="TeachingLessonBooleanInputTest.unfold" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.getErrormap" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.getErrormapFromOutputVector" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.getMaxTimeStep" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.getSpecificError" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.getTeachingInput" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.getTeachingInputMap" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.getTeachingPattern" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.tryLesson" Duration="1" />
    <TestDuration Test="TeachingLessonLinearInputTest.unfold" Duration="1" />
    <TestDuration Test="TopologicalOrderFunction.executeActivation" Duration="1" />
    <TestDuration Test="TournamentCombiningStrategyTest.executeEmptyWorld" Duration="1" />
    <TestDuration Test="TournamentCombiningStrategyTest.executeSingleWorld" Duration="1" />
    <TestDuration Test="TournamentCombiningStrategyTest.executeTwoWorlds" Duration="1" />
    <TestDuration Test="WeightedSumFunction.computeNetInputs" Duration="1" />
  </TestDurations>
</GtaTestDurations>